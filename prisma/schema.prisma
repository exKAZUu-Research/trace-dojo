// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// -----------------------------------------------------------------------------

model User {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  displayName        String                 @unique
  userSolvedAnswers  UserCompletedProblem[]
  ProblemAnswerLog   UserAnswer[]
  UserProblemSession UserProblemSession[]
}

model UserProblemSession {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User   @relation(fields: [userId], references: [id])
  userId    String
  courseId  String
  lectureId String
  problemId String

  problemVariablesSeed  String
  currentProblemType    String
  beforeTraceItemIndex  Int
  currentTraceItemIndex Int
  timeSpent             Int          @default(0)
  startedAt             DateTime
  finishedAt            DateTime?
  isCompleted           Boolean
  userAnswers           UserAnswer[]
}

model UserCompletedProblem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User   @relation(fields: [userId], references: [id])
  userId    String
  courseId  String
  problemId String
  lectureId String
}

model UserAnswer {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  startedAt DateTime?

  user   User   @relation(fields: [userId], references: [id])
  userId String

  userProblemSession   UserProblemSession @relation(fields: [userProblemSessionId], references: [id])
  userProblemSessionId Int

  problemId   String
  problemType String

  timeSpent Int     @default(0)
  step      Int
  isPassed  Boolean
}
